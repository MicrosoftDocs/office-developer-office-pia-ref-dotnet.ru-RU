<Type Name="Scripts" FullName="Microsoft.Office.Core.Scripts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d47d002587c045d30ad740a840c614a1267790d" /><Meta Name="ms.sourcegitcommit" Value="f41bc3cdd2c00b9a51a4340ac823a9e309633924" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/19/2018" /><Meta Name="ms.locfileid" Value="20661729" /></Metadata><TypeSignature Language="C#" Value="public interface Scripts : Microsoft.Office.Core._IMsoDispObj, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Scripts implements class Microsoft.Office.Core._IMsoDispObj, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.Scripts" />
  <TypeSignature Language="VB.NET" Value="Public Interface Scripts&#xA;Implements _IMsoDispObj, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Scripts : Microsoft::Office::Core::_IMsoDispObj, System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0340-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Коллекция <see cref="T:Microsoft.Office.Core.Script" /> объектов, представляющих коллекцию HTML-скриптов в указанном документе.</summary>
    <remarks><para>Коллекция <b>Scripts</b> содержит все объекты <b>скрипта</b> в определенном документе в исходном порядке (порядок, в котором объекты <b>сценария</b> были добавлены в исходный файл). Исходный порядок не зависит от положения (заголовка или основного текста) скрипта в документе. Доступ к коллекции <b>Scripts</b> можно получить с помощью свойства <b>Scripts</b> соответствующего объекта (например, объекта <b>Document</b> в Microsoft Word).</para> 
      <para>С помощью объектов <b>сценариев</b> можно получить доступ к сценарию или добавить скрипт в документ Microsoft Word, лист Microsoft Excel или слайд Microsoft PowerPoint. Вы также можете использовать коллекцию <b>Scripts</b> для доступа к любой HTML-странице или скрипту, который открыт в приложении Microsoft Office.</para> 
      <para>Примечание Microsoft Access не использует этот общий компонент Office.</para> 
      <para>При добавлении объекта <b>скрипта</b> в коллекцию <b>Scripts</b> объект <b>Shape</b> типа <b>мсоскриптанчор</b> автоматически добавляется в документ. На листе Excel или на слайде PowerPoint фигура добавляется в коллекцию <b>Shapes</b> ; в документе Word фигура добавляется в коллекцию <b>InlineShapes</b> . Вы добавляете <b>Скрипт</b> в документ с помощью <see cref="M:Microsoft.Office.Core.Scripts.Add(System.Object,Microsoft.Office.Core.MsoScriptLocation,Microsoft.Office.Core.MsoScriptLanguage,System.String,System.String,System.String)" /> метода.</para> 
      <para>Чтобы получить доступ к определенному элементу в коллекции <b>Scripts</b> , используйте <see cref="M:Microsoft.Office.Core.Scripts.Item(System.Object)" /> метод и укажите атрибут ID тега &lt;script&gt; или номер индекса, указывающий положение скрипта в коллекции. Идентификатор должен быть уникальным в пределах документа. В случае с повторяющимися атрибутами ID возвращается первый найденный скрипт с таким ИДЕНТИФИКАТОРом.</para> 
      <para>Используйте <see cref="P:Microsoft.Office.Core.Scripts.Count" /> свойство, чтобы определить количество объектов <b>скрипта</b> в указанном документе.</para> 
      <para>Используйте <see cref="M:Microsoft.Office.Core.Scripts.Delete" /> метод, чтобы удалить скрипт из коллекции <b>Scripts</b> .</para>
      <para /></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Script Add (object Anchor, Microsoft.Office.Core.MsoScriptLocation Location = Microsoft.Office.Core.MsoScriptLocation.msoScriptLocationInBody, Microsoft.Office.Core.MsoScriptLanguage Language = Microsoft.Office.Core.MsoScriptLanguage.msoScriptLanguageVisualBasic, string Id = &quot;&quot;, string Extended = &quot;&quot;, string ScriptText = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.Script Add([in]object Anchor, [in]valuetype Microsoft.Office.Core.MsoScriptLocation Location, [in]valuetype Microsoft.Office.Core.MsoScriptLanguage Language, [in]string Id, [in]string Extended, [in]string ScriptText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Scripts.Add(System.Object,Microsoft.Office.Core.MsoScriptLocation,Microsoft.Office.Core.MsoScriptLanguage,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Anchor As Object, Optional Location As MsoScriptLocation = Microsoft.Office.Core.MsoScriptLocation.msoScriptLocationInBody, Optional Language As MsoScriptLanguage = Microsoft.Office.Core.MsoScriptLanguage.msoScriptLanguageVisualBasic, Optional Id As String = &quot;&quot;, Optional Extended As String = &quot;&quot;, Optional ScriptText As String = &quot;&quot;) As Script" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Script</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Anchor" Type="System.Object">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.IDispatchConstant</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="Location" Type="Microsoft.Office.Core.MsoScriptLocation" />
        <Parameter Name="Language" Type="Microsoft.Office.Core.MsoScriptLanguage" />
        <Parameter Name="Id" Type="System.String" />
        <Parameter Name="Extended" Type="System.String" />
        <Parameter Name="ScriptText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Anchor">Необязательный <b>объект</b> (только для Microsoft Excel). Аргумент принимает объект <b>диапазона</b> Excel, который указывает расположение привязки сценария на листе Excel. <b>Worksheet</b> <paramref name="Anchor" /> Вы не можете вставлять привязки скриптов в диаграммы Excel.</param>
        <param name="Location">Необязательный <see cref="T:Microsoft.Office.Core.MsoScriptLocation" />параметр. Задает расположение привязки сценария в документе. Если вы указали <paramref name="Anchor" /> аргумент, <paramref name="Location" /> аргумент не используется; расположение <paramref name="Anchor" /> аргумента определяет расположение привязки сценария.</param>
        <param name="Language">Необязательный <see cref="T:Microsoft.Office.Core.MsoScriptLanguage" />параметр. Указывает язык скрипта.</param>
        <param name="Id">Необязательная <b>строка</b>. ИДЕНТИФИКАТОР тега &lt;скрипта&gt; в HTML. <paramref name="Id" /> Аргумент указывает идентификатор сгмл, используемый для именования элементов. Допустимые идентификаторы включают любую строку, начинающуюся с буквы и состоящую из буквенно-цифровых символов; строка также может содержать символ подчеркивания (_). Идентификатор должен быть уникальным в HTML-документе. Этот параметр экспортируется как атрибут ID в тег &lt;script.&gt;</param>
        <param name="Extended">Необязательная <b>строка</b>. Задает &lt;атрибуты, которые необходимо добавить в тег скрипта&gt; (атрибуты языка и идентификатора экспортируются с помощью параметров <paramref name="Language" /> и <paramref name="Id" /> не должны экспортироваться с помощью <paramref name="Extended" /> параметра). Значение по умолчанию — пустая строка. Атрибуты разделяются пробелами, как в HTML-коде. Ведущее приложение Microsoft Office не предоставляет никаких средств проверки синтаксиса переданных атрибутов.</param>
        <param name="ScriptText">Необязательная <b>строка</b>. Задает текст, содержащийся в блоке скрипта. Значение по умолчанию — пустая строка. Ведущее приложение Microsoft Office не проверяет синтаксис скрипта.</param>
        <summary>Добавляет <see cref="T:Microsoft.Office.Core.Script" /> объект в <see cref="T:Microsoft.Office.Core.Scripts" /> коллекцию одного из следующих объектов: объект <b>Document</b> или <b>Range</b> в Microsoft Word; Объект <b>листа</b> или <b>диаграммы</b> в Microsoft Excel; или объект <b>слайда</b>, <b>SlideRange</b>, <b>образец</b>слайдов или <b>образец</b> заголовков в Microsoft PowerPoint.</summary>
        <returns>To be added.</returns>
        <remarks><para>Фигура, связанная с блоком сценариев, не экспортируется и не печатается как фигура в HTML; только блок скрипта возвращает экспортированные данные.</para> 
          <para>Невозможно использовать метод <b>Add</b> , чтобы добавить привязку сценария к диапазону слайдов PowerPoint, содержащему более одного слайда.</para>
          <para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Scripts.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <b>Application</b> , представляющий приложение контейнера для объекта.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Scripts.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>целое</b> число, указывающее количество элементов в указанной коллекции.</summary>
        <value>To be added.</value>
        <remarks><para>Часть содержимого этого раздела может быть неприменима к некоторым языкам.</para> 
          <para>Возвращенное число — это количество блоков скрипта в указанном документе. В Microsoft Word скрипты. Count возвращает общее число Объединенных привязок для встроенных и плавающих сценариев.</para>
          <para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Scripts.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает 32 — разрядное целое число, которое указывает приложение, в котором был создан указанный объект.</summary>
        <value>To be added.</value>
        <remarks><para>Если указанный объект был создан в Microsoft Word, это свойство возвращает 1297307460, которое представляет строку МСВД; При создании в Microsoft Excel это свойство возвращает 1480803660. Это значение также может быть представлено константным <b>вдкреаторкоде</b> в Word или <b>кслкреаторкоде</b> в Excel.</para> 
          <para>Свойство <b>Creator</b> в основном предназначено для использования в Macintosh, где каждое приложение содержит код создателя из четырех символов. Например, в Microsoft Word есть код создателя МСВД. Для получения дополнительных сведений об этом свойстве обратитесь к справочной справке по языку, включенной в Microsoft Office Macintosh Edition.</para> 
          <para>Свойство <b>Creator</b> всегда возвращает числовой идентификатор активного приложения точно так же, <see cref="P:Microsoft.Office.Core.Scripts.Application" /> как свойство всегда возвращает имя активного приложения в строковом формате. Используйте свойство <b>CreatedBy</b> объекта <see cref="T:Microsoft.Office.Core.SharedWorkspaceFile" />, <see cref="T:Microsoft.Office.Core.SharedWorkspaceFolder" /> <see cref="T:Microsoft.Office.Core.SharedWorkspaceLink" />, и <see cref="T:Microsoft.Office.Core.SharedWorkspaceTask" /> для получения имени пользователя, создавшего эти объекты. Используйте свойства документа, чтобы получить сведения об авторских документах Office.</para>
          <para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Scripts.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809349)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет указанный объект из коллекции.</summary>
        <remarks><para>Для <see cref="T:Microsoft.Office.Core.Scripts" /> коллекции с помощью метода <b>Delete</b> удаляются все скрипты из указанного документа Microsoft Word, листа Microsoft Excel или слайда Microsoft PowerPoint. Привязка скрипта представлена фигурой в ведущем приложении. Таким образом, <b>объект Shape</b> , связанный с каждой привязкой сценария типа <b>мсоскриптанчор</b> , удаляется из коллекции <b>Shapes</b> в Excel и PowerPoint, а также из семейств <b>InlineShapes</b> и <b>Shapes</b> в Word.</para>
          <para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Scripts.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Script Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.Script Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.Scripts.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Script" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::Script ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Script</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Обязательный <b>объект</b>. Идентификатор или номер индекса возвращаемого скрипта.</param>
        <summary>Возвращает элемент <see cref="T:Microsoft.Office.Core.Scripts" /> коллекции.</summary>
        <returns>To be added.</returns>
        <remarks><para>Принимает номер индекса или идентификатор скрипта, который должно быть возвращено приложением Microsoft Office. Метод <b>Item</b> принимает значение <b>объекта</b> , которое может принимать либо порядковый номер (значение индекса), который возвращает скрипт, сохраненный в этой позиции в коллекции <b>Scripts</b> , либо <b>строковое</b> значение, представляющее имя или идентификатор скрипта.</para> 
          <para>Коллекция <b>Scripts</b> содержит все скрипты в данном документе в исходном порядке (порядок, в котором <see cref="T:Microsoft.Office.Core.Script" /> объекты отображаются в исходном файле). Скрипты поддерживаются в исходном порядке независимо от их расположения в документе, то есть от того, находятся ли они в заголовке или основном тексте.</para> С 
          <para>помощью метода <b>Item</b> можно получить доступ к скрипту в коллекции <b>Scripts</b> с помощью идентификатора тега &lt;script.&gt; Атрибут &lt;ID тега&gt; Script идентичен <see cref="P:Microsoft.Office.Core.Script.Id" /> свойству объекта <b>script</b> . Если в документе есть повторяющиеся или несколько идентификаторов, и вы используете свойство <b>ID</b> объекта <b>скрипта</b> для доступа к скрипту с помощью метода <b>Item</b> , Office возвращает первый скрипт, соответствующий идентификатору; Дополнительные скрипты с одинаковым ИДЕНТИФИКАТОРом игнорируются.</para> 
          <para>Новые привязки сценариев, добавленные в коллекцию, добавляются в конец коллекции <b>Scripts</b> в том порядке, в котором они были добавлены в документ. Привязки сценариев сохраняются в указанном порядке до тех пор, пока документ не будет сохранен в виде HTML-кода, закрыт, а затем снова открыт в ведущем приложении. После выполнения этих действий коллекция <b>Scripts</b> будет индексироваться в том порядке, в котором в документе отображаются привязки сценариев, которые могут отличаться от порядка, в котором они были добавлены. Поэтому рекомендуется использовать свойство <b>ID</b> объекта <b>script</b> , а не позицию скрипта в коллекции, чтобы гарантировать положительную идентификацию скрипта.</para>
          <para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Core.Scripts.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610809344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>родительский</b> объект для указанного объекта.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>