<Type Name="IRibbonUI" FullName="Microsoft.Office.Core.IRibbonUI">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f912fe8c8db15a87c031bae5d14f2fe64d719567" /><Meta Name="ms.sourcegitcommit" Value="f41bc3cdd2c00b9a51a4340ac823a9e309633924" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/19/2018" /><Meta Name="ms.locfileid" Value="20662102" /></Metadata><TypeSignature Language="C#" Value="public interface IRibbonUI" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRibbonUI" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Core.IRibbonUI" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRibbonUI" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRibbonUI" />
  <AssemblyInfo>
    <AssemblyName>office</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C03A7-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Объект, возвращаемый процедурой <b>OnLoad</b> , указанной в теге <b>customUI</b> .  Объект содержит методы для аннулирования свойств элемента управления и для обновления пользовательского интерфейса.</summary>
    <remarks><para>Пользовательский интерфейс ленты можно настроить с помощью процедур обратного вызова в надстройках COM. При запуске ведущего приложения вызывается процедура обратного вызова <b>OnLoad</b> .  Затем процедура обратного вызова возвращает объект <b>IRibbonUI</b> , указывающий на пользовательский интерфейс. Этот объект можно использовать для вызова методов <b>аннулирования</b>, <b>инвалидатеконтрол</b>и <b>Refresh</b> .</para>
      <para /></remarks>
    <example><para>В следующем примере запуск ведущего приложения вызывает процедуру <b>OnLoad</b> , которая затем вызывает процедуру, которая создает объект <b>IRibbonUI</b> , представляющий пользовательский интерфейс ленты.  Затем определяется процедура обратного вызова, которая делает недействительными все кэшированные элементы управления и обновляет пользовательский интерфейс.</para> 
      <para>Ниже приведена XML-разметка для загрузки настраиваемой ленты в Office:</para>
      <code>&amp;lt;customUI … onLoad=”MyAddInInitialize” …&amp;gt;</code>
      <para>ниже приведен метод обратного вызова для события <b>OnLoad</b> :</para>
      <code>Dim MyRibbon As IRibbonUI
Sub MyAddInInitialize(Ribbon As IRibbonUI)
    Set MyRibbon = Ribbon
End Sub

Sub myFunction()
    ‘ Invalidates the caches of all of this add-in’s controls 
    MyRibbon.Invalidate()            
End Sub</code></example>
  </Docs>
  <Members>
    <Member MemberName="ActivateTab">
      <MemberSignature Language="C#" Value="public void ActivateTab (string ControlID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateTab([in]string ControlID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.IRibbonUI.ActivateTab(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateTab (ControlID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateTab(System::String ^ ControlID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlID">Указывает идентификатор настраиваемой вкладки ленты, которую необходимо активировать.</param>
        <summary>Активирует указанную настраиваемую вкладку.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateTabMso">
      <MemberSignature Language="C#" Value="public void ActivateTabMso (string ControlID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateTabMso([in]string ControlID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.IRibbonUI.ActivateTabMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateTabMso (ControlID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateTabMso(System::String ^ ControlID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlID">Указывает идентификатор настраиваемой вкладки ленты, которую необходимо активировать.</param>
        <summary>Активирует указанную встроенную вкладку.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateTabQ">
      <MemberSignature Language="C#" Value="public void ActivateTabQ (string ControlID, string Namespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateTabQ([in]string ControlID, [in]string Namespace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.IRibbonUI.ActivateTabQ(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateTabQ (ControlID As String, Namespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateTabQ(System::String ^ ControlID, System::String ^ Namespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlID" Type="System.String" />
        <Parameter Name="Namespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlID">Указывает идентификатор настраиваемой вкладки ленты, которую необходимо активировать.</param>
        <param name="Namespace">Задает пространство имен элемента Tab.</param>
        <summary>Активирует указанную настраиваемую вкладку в пользовательском интерфейсе ленты Microsoft Office Fluent. Использует полное имя вкладки, включающее идентификатор и пространство имен вкладки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invalidate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.IRibbonUI.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Делает недействительными кэшированные значения для всех элементов управления пользовательского интерфейса ленты.</summary>
        <remarks><para>Пользовательский интерфейс ленты можно настроить с помощью процедур обратного вызова в надстройках COM. Для каждого из обратных вызовов, реализуемых надстройкой, ответы кэшируются.  Например, если разработчик надстройки реализует <b>процедуру обратного</b> вызова для кнопки, она вызывается один раз, загружает изображение, а затем, если изображение нуждается в обновлении, вместо отзыва процедуры используется кэшированное изображение. Этот процесс остается на месте до тех пор, пока надстройка не подает сигнал о том, что кэшированные значения не являются недопустимыми с помощью метода <b>аннулирования</b> , после чего снова вызывается процедура обратного вызова и выполняется кэширование возвращаемого ответа.  Затем надстройка может выполнить немедленное обновление пользовательского интерфейса, вызвав метод <b>Refresh</b> .</para>
          <para /></remarks>
        <example><para>В следующем примере запуск ведущего приложения запускает процедуру <b>OnLoad</b> , которая затем вызывает процедуру, которая создает объект, представляющий пользовательский интерфейс ленты.  Затем определяется процедура обратного вызова, которая делает недействительными все элементы управления в пользовательском интерфейсе, а затем обновляет пользовательский интерфейс.</para> 
          <para>Ниже приведена XML-разметка для загрузки настраиваемой ленты в Office:</para>
          <code>&amp;lt;customUI … onLoad=”MyAddInInitialize” …&amp;gt;</code>
          <para>ниже приведен метод обратного вызова для события <b>OnLoad</b> :</para>
          <code>Dim MyRibbon As IRibbonUI
Sub MyAddInInitialize(Ribbon As IRibbonUI)
    Set MyRibbon = Ribbon
End Sub

Sub myFunction()
    ‘ Invalidates the caches of all of this add-in’s controls 
    MyRibbon.Invalidate()            
End Sub</code></example>
      </Docs>
    </Member>
    <Member MemberName="InvalidateControl">
      <MemberSignature Language="C#" Value="public void InvalidateControl (string ControlID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateControl([in]string ControlID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.IRibbonUI.InvalidateControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateControl (ControlID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateControl(System::String ^ ControlID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlID">Указывает идентификатор элемента управления, который будет недействительным.</param>
        <summary>Делает недействительным кэшированное значение для одного элемента управления в пользовательском интерфейсе ленты.</summary>
        <remarks><para>Пользовательский интерфейс ленты можно настроить с помощью процедур обратного вызова в надстройках COM. Для каждого из обратных вызовов, реализуемых надстройкой, ответы кэшируются.  Например, если разработчик надстройки реализует <b>процедуру обратного</b> вызова для кнопки, она вызывается один раз, загружает изображение, а затем, если изображение нуждается в обновлении, вместо отзыва процедуры используется кэшированное изображение. Этот процесс остается на месте для элемента управления до тех пор, пока надстройка не подает сигнал о том, что кэшированные значения не являются недопустимыми с помощью метода <b>инвалидатеконтрол</b> , после чего снова вызывается процедура обратного вызова и кэшируется возвращаемый ответ.</para>
          <para /></remarks>
        <example><para>В следующем примере запуск ведущего приложения запускает процедуру <b>OnLoad</b> , которая затем вызывает процедуру, которая создает объект, представляющий пользовательский интерфейс ленты.  Затем определяется процедура обратного вызова, которая делает недействительным элемент управления в пользовательском интерфейсе, а затем обновляет пользовательский интерфейс.</para> 
          <para>Ниже приведена XML-разметка для загрузки настраиваемой ленты в Office:</para>
          <code>&amp;lt;customUI … onLoad=”MyAddInInitialize” …&amp;gt;</code>
          <para>ниже приведен метод обратного вызова для события <b>OnLoad</b> :</para>
          <code>Dim MyRibbon As IRibbonUI
Sub MyAddInInitialize(Ribbon As IRibbonUI)
    Set MyRibbon = Ribbon
End Sub

Sub myFunction()
    ‘ Invalidates the cache of a single control 
    MyRibbon.InvalidateControl(“control5”)            
End Sub</code></example>
      </Docs>
    </Member>
    <Member MemberName="InvalidateControlMso">
      <MemberSignature Language="C#" Value="public void InvalidateControlMso (string ControlID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateControlMso([in]string ControlID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Core.IRibbonUI.InvalidateControlMso(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateControlMso (ControlID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateControlMso(System::String ^ ControlID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>office</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlID">Задает идентификатор элемента управления, который будет недействительным.</param>
        <summary>Используется для аннулирования встроенного элемента управления.</summary>
        <remarks><para>Неподтвержденный элемент управления перерисовывает экран и вызывает выполнение всех процедур обратного вызова, связанных с этим элементом управления.</para>
          <para /></remarks>
      </Docs>
    </Member>
  </Members>
</Type>